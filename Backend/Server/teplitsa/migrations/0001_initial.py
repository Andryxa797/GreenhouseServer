# Generated by Django 3.2.8 on 2022-02-20 06:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('automatic_mode', models.BooleanField(verbose_name='Автоматический режим?')),
                ('is_new_event', models.BooleanField(verbose_name='Есть ли новое событие?')),
            ],
            options={
                'verbose_name': 'Событие для управления',
                'verbose_name_plural': 'События для управления',
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('temp_upstairs', models.DecimalField(decimal_places=6, max_digits=20, verbose_name='Температура в верхней части')),
                ('temp_downstairs', models.DecimalField(decimal_places=6, max_digits=20, verbose_name='Температура в нижней части')),
                ('temp_in_ground', models.DecimalField(decimal_places=6, max_digits=20, verbose_name='Температура  земли')),
                ('temp_street', models.DecimalField(decimal_places=6, max_digits=20, verbose_name='Температура на улице')),
                ('humidity_greenhouse', models.DecimalField(decimal_places=6, max_digits=20, verbose_name='Влажность в теплице')),
                ('humidity_greenhouse_in_ground', models.IntegerField(verbose_name='Влажность земли')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_sensor_data', to=settings.AUTH_USER_MODEL, verbose_name='Владелец записи')),
            ],
            options={
                'verbose_name': 'Показание датчиков',
                'verbose_name_plural': 'Показания датчиков',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='check-point/%Y/%m/%d', verbose_name='Фото')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_photo', to=settings.AUTH_USER_MODEL, verbose_name='Владелец записи')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='ManagedSystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('servo_turn', models.IntegerField(verbose_name='Поворот сервопривода (открытие окон)')),
                ('is_on_lighting', models.BooleanField(verbose_name='Включено ли освещение?')),
                ('is_on_ventilation', models.BooleanField(verbose_name='Включена ли вентиляция?')),
                ('is_on_watering', models.BooleanField(verbose_name='Включен ли полив?')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_managed_systems', to=settings.AUTH_USER_MODEL, verbose_name='Владелец записи')),
            ],
            options={
                'verbose_name': 'Состояния систем управления теплицей',
                'verbose_name_plural': 'Состоянии систем управления теплицей',
            },
        ),
        migrations.CreateModel(
            name='CommandToManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servo_turn', models.IntegerField(verbose_name='Поворот сервопривода (открытие окон)')),
                ('is_on_lighting', models.BooleanField(verbose_name='Включено ли освещение?')),
                ('is_on_ventilation', models.BooleanField(verbose_name='Включена ли вентиляция?')),
                ('is_on_watering', models.BooleanField(verbose_name='Включен ли полив?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_command_manage', to=settings.AUTH_USER_MODEL, verbose_name='Владелец записи')),
            ],
            options={
                'verbose_name': 'Актуальная команда для управления',
                'verbose_name_plural': 'Команды для управления',
            },
        ),
    ]
